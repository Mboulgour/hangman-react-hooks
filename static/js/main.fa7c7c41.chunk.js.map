{"version":3,"sources":["theme/globalStyles.js","components/Words.js","components/Alphabet.js","styled_components/FlexBox.js","styled_components/Title.js","styled_components/Subtitle.js","styled_components/KeyboardContainer.js","styled_components/KeyboardBtn.js","styled_components/ResetButton.js","styled_components/ResultBox.js","components/Hangman.js","App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","props","theme","mainBackground","mainColor","wordsArr","randomWord","Math","floor","random","length","letterArr","FlexBox","styled","div","direction","justify","align","Title","h1","mainPurple","Subtitle","h2","KeyboardContainer","KeyboardBtn","button","ResetButton","ResultBox","Hangman","useState","errorCount","setErrorCount","guessed","setGuessed","wordToGuess","setWordToGuess","gameOver","setGameOver","isWinner","setIsWinner","wordToGuessStatus","useCallback","split","map","letter","includes","keyPressed","e","eventLetter","key","prevErrorCount","useEffect","document","addEventListener","removeEventListener","join","index","tabIndex","onKeyDown","onClick","target","value","changeSetAndErrorValues","disabled","App","ReactDOM","render","mainDarkBlue","getElementById"],"mappings":"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","file":"static/js/main.fa7c7c41.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\n\nexport const GlobalStyles = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: 'Rubik', sans-serif;\n    overflow-x: hidden;\n  }\n\n  body{\n    width: 100vw;\n    background: ${props => props.theme.mainBackground};\n    color: ${props => props.theme.mainColor};\n    text-align: center;\n  }\n\n  a{\n    text-decoration: none;\n    color: inherit;\n    &:hover{\n      cursor: pointer;\n      opacity: 0.8;\n    }\n  }\n\n  li{\n    list-style-type: none;\n  }\n`\n\nexport const theme = {\n  mainBackground: '#05060F',\n  mainColor: '#3CA4F7',\n  mainDarkBlue: '#270DF0',\n  mainPurple: '#A4A4FB',\n}","const wordsArr = [\n  \"uranus\",\n  \"earth\",\n  \"jupiter\",\n  \"mercury\",\n  \"venus\",\n  \"mars\",\n  \"neptune\",\n  \"saturn\",\n  \"endor\",\n  \"coruscant\",\n  \"dagobah\",\n  \"hoth\",\n  \"tatooine\",\n]\n\nexport const randomWord = () => {\n  return wordsArr[Math.floor(Math.random() * wordsArr.length)]\n}\n\n\n","export const letterArr = ['a', 'b' , 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']","import styled from 'styled-components';\n\nexport const FlexBox = styled.div`\n  display: flex;\n  flex-direction: ${props => props.direction};\n  justify-content: ${props => props.justify};\n  align-items: ${props => props.align};\n  width: 100%;\n`","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-family: 'Anton', sans-serif;\n  font-size: 90px;\n  background: -webkit-linear-gradient(-0.15turn,${props => props.theme.mainColor}, ${props => props.theme.mainPurple});\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`","import styled from 'styled-components';\n\nexport const Subtitle = styled.h2`\n  margin: 30px 0 15px 0;\n  font-size: 40px;\n  background: -webkit-linear-gradient(-0.15turn,${props => props.theme.mainColor}, ${props => props.theme.mainPurple});\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`\n","import styled from 'styled-components';\n\nexport const KeyboardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 500px;\n  height: 400px;\n  padding: 30px 40px;\n  margin: 50px 0;\n\n  @media (max-width: 600px) {\n    padding: 0;\n    height: 225px;\n    display: block;\n  }\n`","import styled from 'styled-components';\n\nexport const KeyboardBtn = styled.button`\n  border: none;\n  background: linear-gradient(-0.15turn,${props => props.theme.mainColor}, ${props => props.theme.mainPurple});\n  border-radius: 3px;\n  padding: 15px;\n  color: ${props => props.theme.mainBackground};\n  margin: 5px;\n  position: relative;\n  width: 55px;\n  height: 55px;\n  text-transform: uppercase;\n  font-size: 20px;\n\n  &:disabled{\n    filter: grayscale(80%);\n    opacity: 0.5;\n    &::before{\n      content:\"\";\n      position: absolute;\n      background: ${props => props.theme.mainBackground};\n      height: 100%;\n      width: 2px;\n      top: 0;\n      transform: rotate(35deg);\n      left: 48%;\n    }\n  }\n\n  &:hover{\n    cursor: pointer;\n  }\n\n  @media (max-width: 600px) {\n    width: 35px;\n    height: 35px;\n    padding: 0;\n  }\n`","import styled from 'styled-components';\n\nexport const ResetButton = styled.button`\n  background: linear-gradient(-0.15turn,${props => props.theme.mainColor}, ${props => props.theme.mainPurple});\n  padding: 15px 20px;\n  color: ${props => props.theme.mainBackground};\n  border: none;\n  border-radius: 3px;\n\n  &:hover{\n    cursor: pointer;\n  }\n`","import styled from 'styled-components';\n\nexport const ResultBox = styled.div`\n  border: 5px solid;\n  border-image-source: linear-gradient(-0.15turn,${props => props.theme.mainColor}, ${props => props.theme.mainPurple});\n  border-image-slice: 1;\n  padding: 15px;\n  font-size: 50px;\n`","import React, { useState, useEffect, useCallback } from 'react';\n\nimport { randomWord } from './Words';\nimport { letterArr } from './Alphabet';\n\n// Styled-components\nimport { FlexBox } from '../styled_components/FlexBox';\nimport { Title } from '../styled_components/Title';\nimport { Subtitle } from '../styled_components/Subtitle';\nimport { KeyboardContainer } from '../styled_components/KeyboardContainer';\nimport { KeyboardBtn } from '../styled_components/KeyboardBtn';\nimport { ResetButton } from '../styled_components/ResetButton';\nimport { ResultBox } from '../styled_components/ResultBox';\n\n\nconst Hangman = function(props){\n  const [errorCount, setErrorCount] = useState(0);\n  const [guessed, setGuessed] = useState([]);\n  const [wordToGuess, setWordToGuess] = useState(randomWord());\n  const [gameOver, setGameOver] = useState(false);\n  const [isWinner, setIsWinner] = useState(false);\n\n  const maxError = 6;\n\n  const wordToGuessStatus = useCallback(() => {\n    return wordToGuess.split(\"\").map(letter => (guessed.includes(letter) ? letter : \"_ \"));\n  }, [guessed, wordToGuess])\n\n  const changeSetAndErrorValues = e => {\n    let eventLetter = e.target.value\n    setGuessed([...guessed, eventLetter])\n    wordToGuess.includes(eventLetter) ? setErrorCount(prevErrorCount => prevErrorCount) : setErrorCount(prevErrorCount => prevErrorCount + 1)\n  }\n\n  const keyPressed = useCallback((e) => {\n    let eventLetter = e.key\n    setGuessed([...guessed, eventLetter])\n    wordToGuess.includes(eventLetter) ? setErrorCount(prevErrorCount => prevErrorCount) : setErrorCount(prevErrorCount => prevErrorCount + 1)\n  }, [guessed, wordToGuess])\n\n  const resetGame = () => {\n    setGuessed([])\n    setErrorCount(0)\n    setWordToGuess(randomWord())\n    setGameOver(false)\n    setIsWinner(false)\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', keyPressed);\n    return () => document.removeEventListener('keydown', keyPressed);\n  }, [keyPressed])\n\n  useEffect(() => {\n    (errorCount >= maxError) && setGameOver(true)\n  }, [errorCount])\n\n  useEffect(() => {\n    (wordToGuessStatus().join('') === wordToGuess) && setIsWinner(true)\n  }, [wordToGuessStatus, wordToGuess])\n\n  return (\n    <div>\n      <Title>Hangman</Title>\n      <p>Wrong guesses : {errorCount} / {maxError}</p>\n      <Subtitle>Guess the planet :</Subtitle>\n      <p>{gameOver ? `The word to guess was : ${wordToGuess}` : wordToGuessStatus()}</p>\n      <FlexBox direction=\"row\" justify=\"center\" align=\"center\">\n        {<KeyboardContainer>\n          {gameOver ? \n            <ResultBox><Subtitle>Unfortunately, you loose, try again!</Subtitle></ResultBox>\n          : isWinner ? \n            <ResultBox><Subtitle>Congrats, you win! Another one?</Subtitle></ResultBox>\n          :\n          letterArr.map((letter, index) => \n            <KeyboardBtn key={index} tabIndex=\"1\" onKeyDown={(e) => keyPressed(e)} onClick={(e) => changeSetAndErrorValues(e)} disabled={guessed.includes(letter)} value={letter}>\n              {letter}\n            </KeyboardBtn>\n          )}\n        </KeyboardContainer>\n        }\n        </FlexBox>\n      <ResetButton onClick={resetGame}>Reset Game</ResetButton>\n    </div>\n  )\n}\n\nexport default Hangman;\n\n\n","import React from 'react';\nimport Hangman from './components/Hangman';\n\nfunction App() {\n  return (\n    <>\n      <Hangman />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyles } from './theme/globalStyles';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './theme/globalStyles';\nimport App from './App';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <GlobalStyles />\n    <App />\n  </ThemeProvider>\n, document.getElementById('root'));\n"],"sourceRoot":""}